// <auto-generated />
using System;
using DigitalEmotionDiary.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DigitalEmotionDiary.Migrations
{
    [DbContext(typeof(DigitalEmotionDiaryDbContext))]
    partial class DigitalEmotionDiaryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("DigitalEmotionDiary.Models.Comment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<long>("DiaryEntryId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DiaryEntryId");

                    b.HasIndex("UserId");

                    b.ToTable("Comment");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Content = "Congraturation! Woohoo!",
                            CreatedAt = new DateTime(2024, 12, 15, 13, 34, 46, 598, DateTimeKind.Utc).AddTicks(7896),
                            DiaryEntryId = 1L,
                            UserId = 2L
                        },
                        new
                        {
                            Id = 2L,
                            Content = "We need to fight for democracy!",
                            CreatedAt = new DateTime(2024, 12, 15, 13, 34, 46, 598, DateTimeKind.Utc).AddTicks(8296),
                            DiaryEntryId = 2L,
                            UserId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            Content = "awwww so happy for you!",
                            CreatedAt = new DateTime(2024, 12, 15, 13, 34, 46, 598, DateTimeKind.Utc).AddTicks(8299),
                            DiaryEntryId = 2L,
                            UserId = 1L
                        });
                });

            modelBuilder.Entity("DigitalEmotionDiary.Models.DiaryEntry", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("EmotionId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("ImageId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EmotionId");

                    b.HasIndex("UserId");

                    b.ToTable("DiaryEntry");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Content = "Han Kang, South korean writer won the Nobel Prize in Literature! I'm so proud of her",
                            CreatedAt = new DateTime(2024, 12, 15, 13, 34, 46, 594, DateTimeKind.Utc).AddTicks(8888),
                            EmotionId = 1,
                            ImageId = 1L,
                            IsPublic = true,
                            Title = "Good news",
                            UserId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Content = "An idiot declared martial law today, luckly paliament overruled it in two hours, could save our democracy at the end. What a drama! ",
                            CreatedAt = new DateTime(2024, 12, 15, 13, 34, 46, 594, DateTimeKind.Utc).AddTicks(9675),
                            EmotionId = 4,
                            ImageId = 2L,
                            IsPublic = true,
                            Title = "A complete shock",
                            UserId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            Content = "I adapted new cat, she's so adorable!",
                            CreatedAt = new DateTime(2024, 12, 15, 13, 34, 46, 594, DateTimeKind.Utc).AddTicks(9679),
                            EmotionId = 2,
                            ImageId = 3L,
                            IsPublic = true,
                            Title = "Maya",
                            UserId = 2L
                        });
                });

            modelBuilder.Entity("DigitalEmotionDiary.Models.Emotion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BackgroundColor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("EmotionTypeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EmotionTypeId")
                        .IsUnique();

                    b.ToTable("Emotion");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BackgroundColor = "#ffd700",
                            EmotionTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            BackgroundColor = "#ff7f50",
                            EmotionTypeId = 2
                        },
                        new
                        {
                            Id = 3,
                            BackgroundColor = "#c39797",
                            EmotionTypeId = 3
                        },
                        new
                        {
                            Id = 4,
                            BackgroundColor = "#794044",
                            EmotionTypeId = 4
                        },
                        new
                        {
                            Id = 5,
                            BackgroundColor = "#ff4040",
                            EmotionTypeId = 5
                        },
                        new
                        {
                            Id = 6,
                            BackgroundColor = "#808080",
                            EmotionTypeId = 6
                        },
                        new
                        {
                            Id = 7,
                            BackgroundColor = "#ff0000",
                            EmotionTypeId = 7
                        },
                        new
                        {
                            Id = 8,
                            BackgroundColor = "#eeeeee",
                            EmotionTypeId = 8
                        });
                });

            modelBuilder.Entity("DigitalEmotionDiary.Models.EmotionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("EmotionType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Happy"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Energized"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Tired"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Anxious"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Stressed"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Sad"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Annoyed"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Neutral"
                        });
                });

            modelBuilder.Entity("DigitalEmotionDiary.Models.EntryTag", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("DiaryEntryId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("TagId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DiaryEntryId");

                    b.HasIndex("TagId");

                    b.ToTable("EntryTag");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            DiaryEntryId = 1L,
                            TagId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            DiaryEntryId = 2L,
                            TagId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            DiaryEntryId = 3L,
                            TagId = 1L
                        });
                });

            modelBuilder.Entity("DigitalEmotionDiary.Models.Image", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<long>("DiaryEntryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DiaryEntryId")
                        .IsUnique();

                    b.ToTable("Image");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Description = "writer Han Kang",
                            DiaryEntryId = 1L,
                            Path = "./Resources/Images/hankang.webp",
                            UploadedAt = new DateTime(2024, 12, 15, 13, 34, 46, 602, DateTimeKind.Utc).AddTicks(6579)
                        },
                        new
                        {
                            Id = 2L,
                            Description = "the night under martial law",
                            DiaryEntryId = 2L,
                            Path = "./Resources/Images/120324.png",
                            UploadedAt = new DateTime(2024, 12, 15, 13, 34, 46, 602, DateTimeKind.Utc).AddTicks(7172)
                        },
                        new
                        {
                            Id = 3L,
                            Description = "maja",
                            DiaryEntryId = 3L,
                            Path = "./Resources/Images/maja.jpeg",
                            UploadedAt = new DateTime(2024, 12, 15, 13, 34, 46, 602, DateTimeKind.Utc).AddTicks(7175)
                        });
                });

            modelBuilder.Entity("DigitalEmotionDiary.Models.Like", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("DiaryEntryId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DiaryEntryId");

                    b.HasIndex("UserId");

                    b.ToTable("Like");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            DiaryEntryId = 1L,
                            UserId = 2L
                        },
                        new
                        {
                            Id = 2L,
                            DiaryEntryId = 2L,
                            UserId = 2L
                        });
                });

            modelBuilder.Entity("DigitalEmotionDiary.Models.Tag", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tag");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "news"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "shocking"
                        });
                });

            modelBuilder.Entity("DigitalEmotionDiary.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProfileImagePath")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Email = "elin@gmail.com",
                            Password = "pass1",
                            ProfileImagePath = "elinProfile.png",
                            UserName = "Elin"
                        },
                        new
                        {
                            Id = 2L,
                            Email = "ivan@gmail.com",
                            Password = "pass2",
                            ProfileImagePath = "ivanProfile.png",
                            UserName = "Ivan"
                        });
                });

            modelBuilder.Entity("DigitalEmotionDiary.Models.Comment", b =>
                {
                    b.HasOne("DigitalEmotionDiary.Models.DiaryEntry", "DiaryEntry")
                        .WithMany("Comments")
                        .HasForeignKey("DiaryEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DigitalEmotionDiary.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DiaryEntry");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DigitalEmotionDiary.Models.DiaryEntry", b =>
                {
                    b.HasOne("DigitalEmotionDiary.Models.Emotion", "Emotion")
                        .WithMany("DiaryEntries")
                        .HasForeignKey("EmotionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DigitalEmotionDiary.Models.User", "User")
                        .WithMany("DiaryEntries")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Emotion");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DigitalEmotionDiary.Models.Emotion", b =>
                {
                    b.HasOne("DigitalEmotionDiary.Models.EmotionType", "EmotionType")
                        .WithOne("Emotion")
                        .HasForeignKey("DigitalEmotionDiary.Models.Emotion", "EmotionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmotionType");
                });

            modelBuilder.Entity("DigitalEmotionDiary.Models.EntryTag", b =>
                {
                    b.HasOne("DigitalEmotionDiary.Models.DiaryEntry", "DiaryEntry")
                        .WithMany("EntryTags")
                        .HasForeignKey("DiaryEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DigitalEmotionDiary.Models.Tag", "Tag")
                        .WithMany("EntryTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DiaryEntry");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("DigitalEmotionDiary.Models.Image", b =>
                {
                    b.HasOne("DigitalEmotionDiary.Models.DiaryEntry", "DiaryEntry")
                        .WithOne("Image")
                        .HasForeignKey("DigitalEmotionDiary.Models.Image", "DiaryEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DiaryEntry");
                });

            modelBuilder.Entity("DigitalEmotionDiary.Models.Like", b =>
                {
                    b.HasOne("DigitalEmotionDiary.Models.DiaryEntry", "DiaryEntry")
                        .WithMany("Likes")
                        .HasForeignKey("DiaryEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DigitalEmotionDiary.Models.User", "User")
                        .WithMany("Likes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DiaryEntry");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DigitalEmotionDiary.Models.DiaryEntry", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("EntryTags");

                    b.Navigation("Image")
                        .IsRequired();

                    b.Navigation("Likes");
                });

            modelBuilder.Entity("DigitalEmotionDiary.Models.Emotion", b =>
                {
                    b.Navigation("DiaryEntries");
                });

            modelBuilder.Entity("DigitalEmotionDiary.Models.EmotionType", b =>
                {
                    b.Navigation("Emotion");
                });

            modelBuilder.Entity("DigitalEmotionDiary.Models.Tag", b =>
                {
                    b.Navigation("EntryTags");
                });

            modelBuilder.Entity("DigitalEmotionDiary.Models.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("DiaryEntries");

                    b.Navigation("Likes");
                });
#pragma warning restore 612, 618
        }
    }
}
